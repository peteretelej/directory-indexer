name: CI (TypeScript)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Fast checks first
  lint:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

  # Unit tests - no external services needed
  test-unit:
    name: Unit Tests
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: ["18", "20"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

  # Integration tests - need services (conditional)
  test-integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: lint
    # Only run integration tests on main branch, PRs to main, or when forced
    if: >
      github.event_name == 'push' && github.ref == 'refs/heads/main' ||
      github.event_name == 'pull_request' && github.base_ref == 'main' ||
      contains(github.event.head_commit.message, '[integration]') ||
      contains(github.event.pull_request.title, '[integration]')

    services:
      qdrant:
        image: qdrant/qdrant:v1.11.0
        ports:
          - 6333:6333

      ollama:
        image: ollama/ollama:0.3.12
        ports:
          - 11434:11434
        env:
          OLLAMA_HOST: 0.0.0.0

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Cache Ollama models
        uses: actions/cache@v3
        with:
          path: ~/.ollama
          key: ollama-models-ts-${{ hashFiles('.github/workflows/ci-typescript.yml') }}
          restore-keys: |
            ollama-models-ts-

      - name: Wait for services and setup Ollama model
        run: |
          echo "Waiting for Qdrant..."
          timeout 120 bash -c 'until curl -f http://localhost:6333/healthz; do echo "  Qdrant not ready, waiting..."; sleep 2; done'
          echo "✅ Qdrant is ready!"

          echo "Waiting for Ollama..."
          timeout 180 bash -c 'until curl -f http://localhost:11434/api/tags; do echo "  Ollama not ready, waiting..."; sleep 5; done'
          echo "✅ Ollama is ready!"

          # Check if model is already available
          if curl -s http://localhost:11434/api/tags | grep -q "nomic-embed-text"; then
            echo "✅ nomic-embed-text model already available"
          else
            echo "Pulling nomic-embed-text model..."
            curl -X POST http://localhost:11434/api/pull -d '{"name":"nomic-embed-text"}' --max-time 300
            echo "✅ Model pull completed"
          fi

      - name: Build application
        run: npm run build

      - name: Run integration tests
        run: npm test
        timeout-minutes: 10
        env:
          QDRANT_ENDPOINT: http://localhost:6333
          OLLAMA_ENDPOINT: http://localhost:11434
          DIRECTORY_INDEXER_QDRANT_COLLECTION: directory-indexer-test

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate