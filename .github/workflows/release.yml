name: Release (NPM Release)

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      qdrant:
        image: qdrant/qdrant:v1.11.0
        ports:
          - 6333:6333

      ollama:
        image: ollama/ollama:0.3.12
        ports:
          - 11434:11434
        env:
          OLLAMA_HOST: 0.0.0.0

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Wait for services
        run: |
          echo "Waiting for Qdrant..."
          timeout 120 bash -c 'until curl -f http://localhost:6333/healthz; do echo "  Qdrant not ready, waiting..."; sleep 2; done'
          echo "✅ Qdrant is ready!"

          echo "Waiting for Ollama..."
          timeout 180 bash -c 'until curl -f http://localhost:11434/api/tags; do echo "  Ollama not ready, waiting..."; sleep 5; done'
          echo "✅ Ollama is ready!"

          echo "Pulling nomic-embed-text model..."
          curl -X POST http://localhost:11434/api/pull -d '{"name":"nomic-embed-text"}' --max-time 300

      - name: Run all tests
        run: npm test
        env:
          QDRANT_ENDPOINT: http://localhost:6333
          OLLAMA_ENDPOINT: http://localhost:11434

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release v${{ steps.version.outputs.VERSION }}
          generateReleaseNotes: true
          draft: false
          prerelease: false

  publish-npm:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Verify package contents
        run: npm pack --dry-run

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
